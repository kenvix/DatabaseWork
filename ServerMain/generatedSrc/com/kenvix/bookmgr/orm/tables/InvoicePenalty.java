/*
 * This file is generated by jOOQ.
 */
package com.kenvix.bookmgr.orm.tables;


import com.kenvix.bookmgr.orm.DefaultSchema;
import com.kenvix.bookmgr.orm.Indexes;
import com.kenvix.bookmgr.orm.Keys;
import com.kenvix.bookmgr.orm.tables.records.InvoicePenaltyRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 罚款型订单扩展信息
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InvoicePenalty extends TableImpl<InvoicePenaltyRecord> {

    private static final long serialVersionUID = -48540435;

    /**
     * The reference instance of <code>invoice_penalty</code>
     */
    public static final InvoicePenalty INVOICE_PENALTY = new InvoicePenalty();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InvoicePenaltyRecord> getRecordType() {
        return InvoicePenaltyRecord.class;
    }

    /**
     * The column <code>invoice_penalty.id</code>.
     */
    public final TableField<InvoicePenaltyRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>invoice_penalty.invoice_id</code>. 订单ID
     */
    public final TableField<InvoicePenaltyRecord, Long> INVOICE_ID = createField(DSL.name("invoice_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "订单ID");

    /**
     * The column <code>invoice_penalty.book_id</code>. 书籍ID
     */
    public final TableField<InvoicePenaltyRecord, Long> BOOK_ID = createField(DSL.name("book_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "书籍ID");

    /**
     * Create a <code>invoice_penalty</code> table reference
     */
    public InvoicePenalty() {
        this(DSL.name("invoice_penalty"), null);
    }

    /**
     * Create an aliased <code>invoice_penalty</code> table reference
     */
    public InvoicePenalty(String alias) {
        this(DSL.name(alias), INVOICE_PENALTY);
    }

    /**
     * Create an aliased <code>invoice_penalty</code> table reference
     */
    public InvoicePenalty(Name alias) {
        this(alias, INVOICE_PENALTY);
    }

    private InvoicePenalty(Name alias, Table<InvoicePenaltyRecord> aliased) {
        this(alias, aliased, null);
    }

    private InvoicePenalty(Name alias, Table<InvoicePenaltyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("罚款型订单扩展信息"), TableOptions.table());
    }

    public <O extends Record> InvoicePenalty(Table<O> child, ForeignKey<O, InvoicePenaltyRecord> key) {
        super(child, key, INVOICE_PENALTY);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.INVOICE_PENALTY_FK_BOOK_ID_INVOICE_PENALTY, Indexes.INVOICE_PENALTY_FK_INVOICE_ID_INVOICE_PENALTY);
    }

    @Override
    public Identity<InvoicePenaltyRecord, Long> getIdentity() {
        return Keys.IDENTITY_INVOICE_PENALTY;
    }

    @Override
    public UniqueKey<InvoicePenaltyRecord> getPrimaryKey() {
        return Keys.KEY_INVOICE_PENALTY_PRIMARY;
    }

    @Override
    public List<UniqueKey<InvoicePenaltyRecord>> getKeys() {
        return Arrays.<UniqueKey<InvoicePenaltyRecord>>asList(Keys.KEY_INVOICE_PENALTY_PRIMARY);
    }

    @Override
    public List<ForeignKey<InvoicePenaltyRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<InvoicePenaltyRecord, ?>>asList(Keys.FK_INVOICE_ID_INVOICE_PENALTY, Keys.FK_BOOK_ID_INVOICE_PENALTY);
    }

    public Invoice invoice() {
        return new Invoice(this, Keys.FK_INVOICE_ID_INVOICE_PENALTY);
    }

    public Book book() {
        return new Book(this, Keys.FK_BOOK_ID_INVOICE_PENALTY);
    }

    @Override
    public InvoicePenalty as(String alias) {
        return new InvoicePenalty(DSL.name(alias), this);
    }

    @Override
    public InvoicePenalty as(Name alias) {
        return new InvoicePenalty(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public InvoicePenalty rename(String name) {
        return new InvoicePenalty(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public InvoicePenalty rename(Name name) {
        return new InvoicePenalty(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
