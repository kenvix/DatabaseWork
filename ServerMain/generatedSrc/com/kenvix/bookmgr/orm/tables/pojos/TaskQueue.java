/*
 * This file is generated by jOOQ.
 */
package com.kenvix.bookmgr.orm.tables.pojos;


import com.kenvix.bookmgr.orm.tables.interfaces.ITaskQueue;

import java.sql.Timestamp;

import javax.annotation.processing.Generated;

import org.jooq.JSON;


/**
 * 任务队列（程序可读）
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskQueue implements ITaskQueue {

    private static final long serialVersionUID = 1L;

    private Long      id;
    private Timestamp createdAt;
    private Timestamp finishedAt;
    private Boolean   isFinished;
    private Boolean   isSuccess;
    private Boolean   isDoing;
    private Short     type;
    private JSON      content;
    private JSON      result;

    public TaskQueue() {}

    public TaskQueue(ITaskQueue value) {
        this.id = value.getId();
        this.createdAt = value.getCreatedAt();
        this.finishedAt = value.getFinishedAt();
        this.isFinished = value.getIsFinished();
        this.isSuccess = value.getIsSuccess();
        this.isDoing = value.getIsDoing();
        this.type = value.getType();
        this.content = value.getContent();
        this.result = value.getResult();
    }

    public TaskQueue(
        Long      id,
        Timestamp createdAt,
        Timestamp finishedAt,
        Boolean   isFinished,
        Boolean   isSuccess,
        Boolean   isDoing,
        Short     type,
        JSON      content,
        JSON      result
    ) {
        this.id = id;
        this.createdAt = createdAt;
        this.finishedAt = finishedAt;
        this.isFinished = isFinished;
        this.isSuccess = isSuccess;
        this.isDoing = isDoing;
        this.type = type;
        this.content = content;
        this.result = result;
    }

    /**
     * Getter for <code>task_queue.id</code>.
     */
    @Override
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>task_queue.id</code>.
     */
    @Override
    public TaskQueue setId(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>task_queue.created_at</code>.
     */
    @Override
    public Timestamp getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>task_queue.created_at</code>.
     */
    @Override
    public TaskQueue setCreatedAt(Timestamp createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Getter for <code>task_queue.finished_at</code>.
     */
    @Override
    public Timestamp getFinishedAt() {
        return this.finishedAt;
    }

    /**
     * Setter for <code>task_queue.finished_at</code>.
     */
    @Override
    public TaskQueue setFinishedAt(Timestamp finishedAt) {
        this.finishedAt = finishedAt;
        return this;
    }

    /**
     * Getter for <code>task_queue.is_finished</code>.
     */
    @Override
    public Boolean getIsFinished() {
        return this.isFinished;
    }

    /**
     * Setter for <code>task_queue.is_finished</code>.
     */
    @Override
    public TaskQueue setIsFinished(Boolean isFinished) {
        this.isFinished = isFinished;
        return this;
    }

    /**
     * Getter for <code>task_queue.is_success</code>.
     */
    @Override
    public Boolean getIsSuccess() {
        return this.isSuccess;
    }

    /**
     * Setter for <code>task_queue.is_success</code>.
     */
    @Override
    public TaskQueue setIsSuccess(Boolean isSuccess) {
        this.isSuccess = isSuccess;
        return this;
    }

    /**
     * Getter for <code>task_queue.is_doing</code>.
     */
    @Override
    public Boolean getIsDoing() {
        return this.isDoing;
    }

    /**
     * Setter for <code>task_queue.is_doing</code>.
     */
    @Override
    public TaskQueue setIsDoing(Boolean isDoing) {
        this.isDoing = isDoing;
        return this;
    }

    /**
     * Getter for <code>task_queue.type</code>.
     */
    @Override
    public Short getType() {
        return this.type;
    }

    /**
     * Setter for <code>task_queue.type</code>.
     */
    @Override
    public TaskQueue setType(Short type) {
        this.type = type;
        return this;
    }

    /**
     * Getter for <code>task_queue.content</code>. 任务正文（程序可读）
     */
    @Override
    public JSON getContent() {
        return this.content;
    }

    /**
     * Setter for <code>task_queue.content</code>. 任务正文（程序可读）
     */
    @Override
    public TaskQueue setContent(JSON content) {
        this.content = content;
        return this;
    }

    /**
     * Getter for <code>task_queue.result</code>. 任务结果（程序可读）
     */
    @Override
    public JSON getResult() {
        return this.result;
    }

    /**
     * Setter for <code>task_queue.result</code>. 任务结果（程序可读）
     */
    @Override
    public TaskQueue setResult(JSON result) {
        this.result = result;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("TaskQueue (");

        sb.append(id);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(finishedAt);
        sb.append(", ").append(isFinished);
        sb.append(", ").append(isSuccess);
        sb.append(", ").append(isDoing);
        sb.append(", ").append(type);
        sb.append(", ").append(content);
        sb.append(", ").append(result);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ITaskQueue from) {
        setId(from.getId());
        setCreatedAt(from.getCreatedAt());
        setFinishedAt(from.getFinishedAt());
        setIsFinished(from.getIsFinished());
        setIsSuccess(from.getIsSuccess());
        setIsDoing(from.getIsDoing());
        setType(from.getType());
        setContent(from.getContent());
        setResult(from.getResult());
    }

    @Override
    public <E extends ITaskQueue> E into(E into) {
        into.from(this);
        return into;
    }
}
