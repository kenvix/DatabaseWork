/*
 * This file is generated by jOOQ.
 */
package com.kenvix.bookmgr.orm.tables.daos;


import com.kenvix.bookmgr.orm.tables.BookStatus;
import com.kenvix.bookmgr.orm.tables.records.BookStatusRecord;

import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * 书籍状态表
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookStatusDao extends DAOImpl<BookStatusRecord, com.kenvix.bookmgr.orm.tables.pojos.BookStatus, Byte> {

    /**
     * Create a new BookStatusDao without any configuration
     */
    public BookStatusDao() {
        super(BookStatus.BOOK_STATUS, com.kenvix.bookmgr.orm.tables.pojos.BookStatus.class);
    }

    /**
     * Create a new BookStatusDao with an attached configuration
     */
    public BookStatusDao(Configuration configuration) {
        super(BookStatus.BOOK_STATUS, com.kenvix.bookmgr.orm.tables.pojos.BookStatus.class, configuration);
    }

    @Override
    public Byte getId(com.kenvix.bookmgr.orm.tables.pojos.BookStatus object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.kenvix.bookmgr.orm.tables.pojos.BookStatus> fetchRangeOfId(Byte lowerInclusive, Byte upperInclusive) {
        return fetchRange(BookStatus.BOOK_STATUS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.kenvix.bookmgr.orm.tables.pojos.BookStatus> fetchById(Byte... values) {
        return fetch(BookStatus.BOOK_STATUS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.kenvix.bookmgr.orm.tables.pojos.BookStatus fetchOneById(Byte value) {
        return fetchOne(BookStatus.BOOK_STATUS.ID, value);
    }

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.kenvix.bookmgr.orm.tables.pojos.BookStatus> fetchRangeOfDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(BookStatus.BOOK_STATUS.DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<com.kenvix.bookmgr.orm.tables.pojos.BookStatus> fetchByDescription(String... values) {
        return fetch(BookStatus.BOOK_STATUS.DESCRIPTION, values);
    }
}
