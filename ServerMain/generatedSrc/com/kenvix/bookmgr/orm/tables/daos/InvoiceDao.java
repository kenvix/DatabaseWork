/*
 * This file is generated by jOOQ.
 */
package com.kenvix.bookmgr.orm.tables.daos;


import com.kenvix.bookmgr.orm.tables.Invoice;
import com.kenvix.bookmgr.orm.tables.records.InvoiceRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.JSON;
import org.jooq.impl.DAOImpl;


/**
 * 账单，包括罚款
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InvoiceDao extends DAOImpl<InvoiceRecord, com.kenvix.bookmgr.orm.tables.pojos.Invoice, Long> {

    /**
     * Create a new InvoiceDao without any configuration
     */
    public InvoiceDao() {
        super(Invoice.INVOICE, com.kenvix.bookmgr.orm.tables.pojos.Invoice.class);
    }

    /**
     * Create a new InvoiceDao with an attached configuration
     */
    public InvoiceDao(Configuration configuration) {
        super(Invoice.INVOICE, com.kenvix.bookmgr.orm.tables.pojos.Invoice.class, configuration);
    }

    @Override
    public Long getId(com.kenvix.bookmgr.orm.tables.pojos.Invoice object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.kenvix.bookmgr.orm.tables.pojos.Invoice> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Invoice.INVOICE.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.kenvix.bookmgr.orm.tables.pojos.Invoice> fetchById(Long... values) {
        return fetch(Invoice.INVOICE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.kenvix.bookmgr.orm.tables.pojos.Invoice fetchOneById(Long value) {
        return fetchOne(Invoice.INVOICE.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.kenvix.bookmgr.orm.tables.pojos.Invoice> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Invoice.INVOICE.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.kenvix.bookmgr.orm.tables.pojos.Invoice> fetchByName(String... values) {
        return fetch(Invoice.INVOICE.NAME, values);
    }

    /**
     * Fetch records that have <code>type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.kenvix.bookmgr.orm.tables.pojos.Invoice> fetchRangeOfType(Short lowerInclusive, Short upperInclusive) {
        return fetchRange(Invoice.INVOICE.TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<com.kenvix.bookmgr.orm.tables.pojos.Invoice> fetchByType(Short... values) {
        return fetch(Invoice.INVOICE.TYPE, values);
    }

    /**
     * Fetch records that have <code>owner_uid BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.kenvix.bookmgr.orm.tables.pojos.Invoice> fetchRangeOfOwnerUid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Invoice.INVOICE.OWNER_UID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>owner_uid IN (values)</code>
     */
    public List<com.kenvix.bookmgr.orm.tables.pojos.Invoice> fetchByOwnerUid(Long... values) {
        return fetch(Invoice.INVOICE.OWNER_UID, values);
    }

    /**
     * Fetch records that have <code>should_pay BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.kenvix.bookmgr.orm.tables.pojos.Invoice> fetchRangeOfShouldPay(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Invoice.INVOICE.SHOULD_PAY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>should_pay IN (values)</code>
     */
    public List<com.kenvix.bookmgr.orm.tables.pojos.Invoice> fetchByShouldPay(Integer... values) {
        return fetch(Invoice.INVOICE.SHOULD_PAY, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.kenvix.bookmgr.orm.tables.pojos.Invoice> fetchRangeOfCreatedAt(Timestamp lowerInclusive, Timestamp upperInclusive) {
        return fetchRange(Invoice.INVOICE.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.kenvix.bookmgr.orm.tables.pojos.Invoice> fetchByCreatedAt(Timestamp... values) {
        return fetch(Invoice.INVOICE.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.kenvix.bookmgr.orm.tables.pojos.Invoice> fetchRangeOfStatus(Byte lowerInclusive, Byte upperInclusive) {
        return fetchRange(Invoice.INVOICE.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<com.kenvix.bookmgr.orm.tables.pojos.Invoice> fetchByStatus(Byte... values) {
        return fetch(Invoice.INVOICE.STATUS, values);
    }

    /**
     * Fetch records that have <code>expire_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.kenvix.bookmgr.orm.tables.pojos.Invoice> fetchRangeOfExpireAt(Timestamp lowerInclusive, Timestamp upperInclusive) {
        return fetchRange(Invoice.INVOICE.EXPIRE_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>expire_at IN (values)</code>
     */
    public List<com.kenvix.bookmgr.orm.tables.pojos.Invoice> fetchByExpireAt(Timestamp... values) {
        return fetch(Invoice.INVOICE.EXPIRE_AT, values);
    }

    /**
     * Fetch records that have <code>paid_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.kenvix.bookmgr.orm.tables.pojos.Invoice> fetchRangeOfPaidAt(Timestamp lowerInclusive, Timestamp upperInclusive) {
        return fetchRange(Invoice.INVOICE.PAID_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>paid_at IN (values)</code>
     */
    public List<com.kenvix.bookmgr.orm.tables.pojos.Invoice> fetchByPaidAt(Timestamp... values) {
        return fetch(Invoice.INVOICE.PAID_AT, values);
    }

    /**
     * Fetch records that have <code>comment BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.kenvix.bookmgr.orm.tables.pojos.Invoice> fetchRangeOfComment(String lowerInclusive, String upperInclusive) {
        return fetchRange(Invoice.INVOICE.COMMENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>comment IN (values)</code>
     */
    public List<com.kenvix.bookmgr.orm.tables.pojos.Invoice> fetchByComment(String... values) {
        return fetch(Invoice.INVOICE.COMMENT, values);
    }

    /**
     * Fetch records that have <code>extra_data BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.kenvix.bookmgr.orm.tables.pojos.Invoice> fetchRangeOfExtraData(JSON lowerInclusive, JSON upperInclusive) {
        return fetchRange(Invoice.INVOICE.EXTRA_DATA, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>extra_data IN (values)</code>
     */
    public List<com.kenvix.bookmgr.orm.tables.pojos.Invoice> fetchByExtraData(JSON... values) {
        return fetch(Invoice.INVOICE.EXTRA_DATA, values);
    }
}
