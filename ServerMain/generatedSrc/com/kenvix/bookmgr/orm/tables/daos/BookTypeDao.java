/*
 * This file is generated by jOOQ.
 */
package com.kenvix.bookmgr.orm.tables.daos;


import com.kenvix.bookmgr.orm.tables.BookType;
import com.kenvix.bookmgr.orm.tables.records.BookTypeRecord;

import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * 图书类目
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookTypeDao extends DAOImpl<BookTypeRecord, com.kenvix.bookmgr.orm.tables.pojos.BookType, Integer> {

    /**
     * Create a new BookTypeDao without any configuration
     */
    public BookTypeDao() {
        super(BookType.BOOK_TYPE, com.kenvix.bookmgr.orm.tables.pojos.BookType.class);
    }

    /**
     * Create a new BookTypeDao with an attached configuration
     */
    public BookTypeDao(Configuration configuration) {
        super(BookType.BOOK_TYPE, com.kenvix.bookmgr.orm.tables.pojos.BookType.class, configuration);
    }

    @Override
    public Integer getId(com.kenvix.bookmgr.orm.tables.pojos.BookType object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.kenvix.bookmgr.orm.tables.pojos.BookType> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(BookType.BOOK_TYPE.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.kenvix.bookmgr.orm.tables.pojos.BookType> fetchById(Integer... values) {
        return fetch(BookType.BOOK_TYPE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.kenvix.bookmgr.orm.tables.pojos.BookType fetchOneById(Integer value) {
        return fetchOne(BookType.BOOK_TYPE.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.kenvix.bookmgr.orm.tables.pojos.BookType> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(BookType.BOOK_TYPE.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.kenvix.bookmgr.orm.tables.pojos.BookType> fetchByName(String... values) {
        return fetch(BookType.BOOK_TYPE.NAME, values);
    }

    /**
     * Fetch records that have <code>parent_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.kenvix.bookmgr.orm.tables.pojos.BookType> fetchRangeOfParentId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(BookType.BOOK_TYPE.PARENT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>parent_id IN (values)</code>
     */
    public List<com.kenvix.bookmgr.orm.tables.pojos.BookType> fetchByParentId(Integer... values) {
        return fetch(BookType.BOOK_TYPE.PARENT_ID, values);
    }
}
