/*
 * This file is generated by jOOQ.
 */
package com.kenvix.bookmgr.orm.tables.records;


import com.kenvix.bookmgr.orm.enums.LogSystemLevel;
import com.kenvix.bookmgr.orm.tables.LogSystem;
import com.kenvix.bookmgr.orm.tables.interfaces.ILogSystem;

import java.sql.Timestamp;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 系统日志
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LogSystemRecord extends UpdatableRecordImpl<LogSystemRecord> implements Record6<Long, String, LogSystemLevel, Timestamp, String, String>, ILogSystem {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>log_system.id</code>.
     */
    @Override
    public LogSystemRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>log_system.id</code>.
     */
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>log_system.source</code>. 日志来源
     */
    @Override
    public LogSystemRecord setSource(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>log_system.source</code>. 日志来源
     */
    @Override
    public String getSource() {
        return (String) get(1);
    }

    /**
     * Setter for <code>log_system.level</code>. 日志级别
     */
    @Override
    public LogSystemRecord setLevel(LogSystemLevel value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>log_system.level</code>. 日志级别
     */
    @Override
    public LogSystemLevel getLevel() {
        return (LogSystemLevel) get(2);
    }

    /**
     * Setter for <code>log_system.time</code>. 发生事件
     */
    @Override
    public LogSystemRecord setTime(Timestamp value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>log_system.time</code>. 发生事件
     */
    @Override
    public Timestamp getTime() {
        return (Timestamp) get(3);
    }

    /**
     * Setter for <code>log_system.message</code>. 消息
     */
    @Override
    public LogSystemRecord setMessage(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>log_system.message</code>. 消息
     */
    @Override
    public String getMessage() {
        return (String) get(4);
    }

    /**
     * Setter for <code>log_system.exception</code>. 日志异常类型（简化名）
     */
    @Override
    public LogSystemRecord setException(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>log_system.exception</code>. 日志异常类型（简化名）
     */
    @Override
    public String getException() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, String, LogSystemLevel, Timestamp, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, String, LogSystemLevel, Timestamp, String, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return LogSystem.LOG_SYSTEM.ID;
    }

    @Override
    public Field<String> field2() {
        return LogSystem.LOG_SYSTEM.SOURCE;
    }

    @Override
    public Field<LogSystemLevel> field3() {
        return LogSystem.LOG_SYSTEM.LEVEL;
    }

    @Override
    public Field<Timestamp> field4() {
        return LogSystem.LOG_SYSTEM.TIME;
    }

    @Override
    public Field<String> field5() {
        return LogSystem.LOG_SYSTEM.MESSAGE;
    }

    @Override
    public Field<String> field6() {
        return LogSystem.LOG_SYSTEM.EXCEPTION;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getSource();
    }

    @Override
    public LogSystemLevel component3() {
        return getLevel();
    }

    @Override
    public Timestamp component4() {
        return getTime();
    }

    @Override
    public String component5() {
        return getMessage();
    }

    @Override
    public String component6() {
        return getException();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getSource();
    }

    @Override
    public LogSystemLevel value3() {
        return getLevel();
    }

    @Override
    public Timestamp value4() {
        return getTime();
    }

    @Override
    public String value5() {
        return getMessage();
    }

    @Override
    public String value6() {
        return getException();
    }

    @Override
    public LogSystemRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public LogSystemRecord value2(String value) {
        setSource(value);
        return this;
    }

    @Override
    public LogSystemRecord value3(LogSystemLevel value) {
        setLevel(value);
        return this;
    }

    @Override
    public LogSystemRecord value4(Timestamp value) {
        setTime(value);
        return this;
    }

    @Override
    public LogSystemRecord value5(String value) {
        setMessage(value);
        return this;
    }

    @Override
    public LogSystemRecord value6(String value) {
        setException(value);
        return this;
    }

    @Override
    public LogSystemRecord values(Long value1, String value2, LogSystemLevel value3, Timestamp value4, String value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ILogSystem from) {
        setId(from.getId());
        setSource(from.getSource());
        setLevel(from.getLevel());
        setTime(from.getTime());
        setMessage(from.getMessage());
        setException(from.getException());
    }

    @Override
    public <E extends ILogSystem> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LogSystemRecord
     */
    public LogSystemRecord() {
        super(LogSystem.LOG_SYSTEM);
    }

    /**
     * Create a detached, initialised LogSystemRecord
     */
    public LogSystemRecord(Long id, String source, LogSystemLevel level, Timestamp time, String message, String exception) {
        super(LogSystem.LOG_SYSTEM);

        setId(id);
        setSource(source);
        setLevel(level);
        setTime(time);
        setMessage(message);
        setException(exception);
    }
}
