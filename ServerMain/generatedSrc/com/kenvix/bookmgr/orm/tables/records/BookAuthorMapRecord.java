/*
 * This file is generated by jOOQ.
 */
package com.kenvix.bookmgr.orm.tables.records;


import com.kenvix.bookmgr.orm.tables.BookAuthorMap;
import com.kenvix.bookmgr.orm.tables.interfaces.IBookAuthorMap;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 书籍-作者关系映射表
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookAuthorMapRecord extends UpdatableRecordImpl<BookAuthorMapRecord> implements Record2<Long, Long>, IBookAuthorMap {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>book_author_map.book_id</code>. 书籍ID
     */
    @Override
    public BookAuthorMapRecord setBookId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>book_author_map.book_id</code>. 书籍ID
     */
    @Override
    public Long getBookId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>book_author_map.author_id</code>. 作者ID
     */
    @Override
    public BookAuthorMapRecord setAuthorId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>book_author_map.author_id</code>. 作者ID
     */
    @Override
    public Long getAuthorId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return BookAuthorMap.BOOK_AUTHOR_MAP.BOOK_ID;
    }

    @Override
    public Field<Long> field2() {
        return BookAuthorMap.BOOK_AUTHOR_MAP.AUTHOR_ID;
    }

    @Override
    public Long component1() {
        return getBookId();
    }

    @Override
    public Long component2() {
        return getAuthorId();
    }

    @Override
    public Long value1() {
        return getBookId();
    }

    @Override
    public Long value2() {
        return getAuthorId();
    }

    @Override
    public BookAuthorMapRecord value1(Long value) {
        setBookId(value);
        return this;
    }

    @Override
    public BookAuthorMapRecord value2(Long value) {
        setAuthorId(value);
        return this;
    }

    @Override
    public BookAuthorMapRecord values(Long value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IBookAuthorMap from) {
        setBookId(from.getBookId());
        setAuthorId(from.getAuthorId());
    }

    @Override
    public <E extends IBookAuthorMap> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BookAuthorMapRecord
     */
    public BookAuthorMapRecord() {
        super(BookAuthorMap.BOOK_AUTHOR_MAP);
    }

    /**
     * Create a detached, initialised BookAuthorMapRecord
     */
    public BookAuthorMapRecord(Long bookId, Long authorId) {
        super(BookAuthorMap.BOOK_AUTHOR_MAP);

        setBookId(bookId);
        setAuthorId(authorId);
    }
}
