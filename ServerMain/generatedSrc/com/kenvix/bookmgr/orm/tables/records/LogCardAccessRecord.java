/*
 * This file is generated by jOOQ.
 */
package com.kenvix.bookmgr.orm.tables.records;


import com.kenvix.bookmgr.orm.tables.LogCardAccess;
import com.kenvix.bookmgr.orm.tables.interfaces.ILogCardAccess;

import java.sql.Timestamp;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 刷卡日志（不可修改和删除）
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LogCardAccessRecord extends UpdatableRecordImpl<LogCardAccessRecord> implements Record5<Long, Long, Boolean, Timestamp, Integer>, ILogCardAccess {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>log_card_access.id</code>.
     */
    @Override
    public LogCardAccessRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>log_card_access.id</code>.
     */
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>log_card_access.serial_id</code>. 卡序列号
     */
    @Override
    public LogCardAccessRecord setSerialId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>log_card_access.serial_id</code>. 卡序列号
     */
    @Override
    public Long getSerialId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>log_card_access.is_success</code>. 是否刷卡成功
     */
    @Override
    public LogCardAccessRecord setIsSuccess(Boolean value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>log_card_access.is_success</code>. 是否刷卡成功
     */
    @Override
    public Boolean getIsSuccess() {
        return (Boolean) get(2);
    }

    /**
     * Setter for <code>log_card_access.time</code>. 刷卡时间
     */
    @Override
    public LogCardAccessRecord setTime(Timestamp value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>log_card_access.time</code>. 刷卡时间
     */
    @Override
    public Timestamp getTime() {
        return (Timestamp) get(3);
    }

    /**
     * Setter for <code>log_card_access.machine_id</code>. 刷卡机器编号
     */
    @Override
    public LogCardAccessRecord setMachineId(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>log_card_access.machine_id</code>. 刷卡机器编号
     */
    @Override
    public Integer getMachineId() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Long, Boolean, Timestamp, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, Long, Boolean, Timestamp, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return LogCardAccess.LOG_CARD_ACCESS.ID;
    }

    @Override
    public Field<Long> field2() {
        return LogCardAccess.LOG_CARD_ACCESS.SERIAL_ID;
    }

    @Override
    public Field<Boolean> field3() {
        return LogCardAccess.LOG_CARD_ACCESS.IS_SUCCESS;
    }

    @Override
    public Field<Timestamp> field4() {
        return LogCardAccess.LOG_CARD_ACCESS.TIME;
    }

    @Override
    public Field<Integer> field5() {
        return LogCardAccess.LOG_CARD_ACCESS.MACHINE_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getSerialId();
    }

    @Override
    public Boolean component3() {
        return getIsSuccess();
    }

    @Override
    public Timestamp component4() {
        return getTime();
    }

    @Override
    public Integer component5() {
        return getMachineId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getSerialId();
    }

    @Override
    public Boolean value3() {
        return getIsSuccess();
    }

    @Override
    public Timestamp value4() {
        return getTime();
    }

    @Override
    public Integer value5() {
        return getMachineId();
    }

    @Override
    public LogCardAccessRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public LogCardAccessRecord value2(Long value) {
        setSerialId(value);
        return this;
    }

    @Override
    public LogCardAccessRecord value3(Boolean value) {
        setIsSuccess(value);
        return this;
    }

    @Override
    public LogCardAccessRecord value4(Timestamp value) {
        setTime(value);
        return this;
    }

    @Override
    public LogCardAccessRecord value5(Integer value) {
        setMachineId(value);
        return this;
    }

    @Override
    public LogCardAccessRecord values(Long value1, Long value2, Boolean value3, Timestamp value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ILogCardAccess from) {
        setId(from.getId());
        setSerialId(from.getSerialId());
        setIsSuccess(from.getIsSuccess());
        setTime(from.getTime());
        setMachineId(from.getMachineId());
    }

    @Override
    public <E extends ILogCardAccess> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LogCardAccessRecord
     */
    public LogCardAccessRecord() {
        super(LogCardAccess.LOG_CARD_ACCESS);
    }

    /**
     * Create a detached, initialised LogCardAccessRecord
     */
    public LogCardAccessRecord(Long id, Long serialId, Boolean isSuccess, Timestamp time, Integer machineId) {
        super(LogCardAccess.LOG_CARD_ACCESS);

        setId(id);
        setSerialId(serialId);
        setIsSuccess(isSuccess);
        setTime(time);
        setMachineId(machineId);
    }
}
