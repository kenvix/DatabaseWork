/*
 * This file is generated by jOOQ.
 */
package com.kenvix.bookmgr.orm.tables.records;


import com.kenvix.bookmgr.orm.tables.Invoice;
import com.kenvix.bookmgr.orm.tables.interfaces.IInvoice;

import java.sql.Timestamp;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.JSON;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 账单，包括罚款
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InvoiceRecord extends UpdatableRecordImpl<InvoiceRecord> implements Record11<Long, String, Short, Long, Integer, Timestamp, Byte, Timestamp, Timestamp, String, JSON>, IInvoice {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>invoice.id</code>. 订单ID
     */
    @Override
    public InvoiceRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>invoice.id</code>. 订单ID
     */
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>invoice.name</code>. 订单名称
     */
    @Override
    public InvoiceRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>invoice.name</code>. 订单名称
     */
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>invoice.type</code>. 订单类型
     */
    @Override
    public InvoiceRecord setType(Short value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>invoice.type</code>. 订单类型
     */
    @Override
    public Short getType() {
        return (Short) get(2);
    }

    /**
     * Setter for <code>invoice.owner_uid</code>. 付款人UID
     */
    @Override
    public InvoiceRecord setOwnerUid(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>invoice.owner_uid</code>. 付款人UID
     */
    @Override
    public Long getOwnerUid() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>invoice.should_pay</code>. 应付金额
     */
    @Override
    public InvoiceRecord setShouldPay(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>invoice.should_pay</code>. 应付金额
     */
    @Override
    public Integer getShouldPay() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>invoice.created_at</code>. 创建时间
     */
    @Override
    public InvoiceRecord setCreatedAt(Timestamp value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>invoice.created_at</code>. 创建时间
     */
    @Override
    public Timestamp getCreatedAt() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>invoice.status</code>. 订单状态
     */
    @Override
    public InvoiceRecord setStatus(Byte value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>invoice.status</code>. 订单状态
     */
    @Override
    public Byte getStatus() {
        return (Byte) get(6);
    }

    /**
     * Setter for <code>invoice.expire_at</code>. 订单过期时间
     */
    @Override
    public InvoiceRecord setExpireAt(Timestamp value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>invoice.expire_at</code>. 订单过期时间
     */
    @Override
    public Timestamp getExpireAt() {
        return (Timestamp) get(7);
    }

    /**
     * Setter for <code>invoice.paid_at</code>. 订单支付时间,NULL为没付
     */
    @Override
    public InvoiceRecord setPaidAt(Timestamp value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>invoice.paid_at</code>. 订单支付时间,NULL为没付
     */
    @Override
    public Timestamp getPaidAt() {
        return (Timestamp) get(8);
    }

    /**
     * Setter for <code>invoice.comment</code>. 订单备注
     */
    @Override
    public InvoiceRecord setComment(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>invoice.comment</code>. 订单备注
     */
    @Override
    public String getComment() {
        return (String) get(9);
    }

    /**
     * Setter for <code>invoice.extra_data</code>. 保留备用。特定订单驱动可读的数据信息
     */
    @Override
    public InvoiceRecord setExtraData(JSON value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>invoice.extra_data</code>. 保留备用。特定订单驱动可读的数据信息
     */
    @Override
    public JSON getExtraData() {
        return (JSON) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<Long, String, Short, Long, Integer, Timestamp, Byte, Timestamp, Timestamp, String, JSON> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<Long, String, Short, Long, Integer, Timestamp, Byte, Timestamp, Timestamp, String, JSON> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Invoice.INVOICE.ID;
    }

    @Override
    public Field<String> field2() {
        return Invoice.INVOICE.NAME;
    }

    @Override
    public Field<Short> field3() {
        return Invoice.INVOICE.TYPE;
    }

    @Override
    public Field<Long> field4() {
        return Invoice.INVOICE.OWNER_UID;
    }

    @Override
    public Field<Integer> field5() {
        return Invoice.INVOICE.SHOULD_PAY;
    }

    @Override
    public Field<Timestamp> field6() {
        return Invoice.INVOICE.CREATED_AT;
    }

    @Override
    public Field<Byte> field7() {
        return Invoice.INVOICE.STATUS;
    }

    @Override
    public Field<Timestamp> field8() {
        return Invoice.INVOICE.EXPIRE_AT;
    }

    @Override
    public Field<Timestamp> field9() {
        return Invoice.INVOICE.PAID_AT;
    }

    @Override
    public Field<String> field10() {
        return Invoice.INVOICE.COMMENT;
    }

    @Override
    public Field<JSON> field11() {
        return Invoice.INVOICE.EXTRA_DATA;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Short component3() {
        return getType();
    }

    @Override
    public Long component4() {
        return getOwnerUid();
    }

    @Override
    public Integer component5() {
        return getShouldPay();
    }

    @Override
    public Timestamp component6() {
        return getCreatedAt();
    }

    @Override
    public Byte component7() {
        return getStatus();
    }

    @Override
    public Timestamp component8() {
        return getExpireAt();
    }

    @Override
    public Timestamp component9() {
        return getPaidAt();
    }

    @Override
    public String component10() {
        return getComment();
    }

    @Override
    public JSON component11() {
        return getExtraData();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Short value3() {
        return getType();
    }

    @Override
    public Long value4() {
        return getOwnerUid();
    }

    @Override
    public Integer value5() {
        return getShouldPay();
    }

    @Override
    public Timestamp value6() {
        return getCreatedAt();
    }

    @Override
    public Byte value7() {
        return getStatus();
    }

    @Override
    public Timestamp value8() {
        return getExpireAt();
    }

    @Override
    public Timestamp value9() {
        return getPaidAt();
    }

    @Override
    public String value10() {
        return getComment();
    }

    @Override
    public JSON value11() {
        return getExtraData();
    }

    @Override
    public InvoiceRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public InvoiceRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public InvoiceRecord value3(Short value) {
        setType(value);
        return this;
    }

    @Override
    public InvoiceRecord value4(Long value) {
        setOwnerUid(value);
        return this;
    }

    @Override
    public InvoiceRecord value5(Integer value) {
        setShouldPay(value);
        return this;
    }

    @Override
    public InvoiceRecord value6(Timestamp value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public InvoiceRecord value7(Byte value) {
        setStatus(value);
        return this;
    }

    @Override
    public InvoiceRecord value8(Timestamp value) {
        setExpireAt(value);
        return this;
    }

    @Override
    public InvoiceRecord value9(Timestamp value) {
        setPaidAt(value);
        return this;
    }

    @Override
    public InvoiceRecord value10(String value) {
        setComment(value);
        return this;
    }

    @Override
    public InvoiceRecord value11(JSON value) {
        setExtraData(value);
        return this;
    }

    @Override
    public InvoiceRecord values(Long value1, String value2, Short value3, Long value4, Integer value5, Timestamp value6, Byte value7, Timestamp value8, Timestamp value9, String value10, JSON value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IInvoice from) {
        setId(from.getId());
        setName(from.getName());
        setType(from.getType());
        setOwnerUid(from.getOwnerUid());
        setShouldPay(from.getShouldPay());
        setCreatedAt(from.getCreatedAt());
        setStatus(from.getStatus());
        setExpireAt(from.getExpireAt());
        setPaidAt(from.getPaidAt());
        setComment(from.getComment());
        setExtraData(from.getExtraData());
    }

    @Override
    public <E extends IInvoice> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InvoiceRecord
     */
    public InvoiceRecord() {
        super(Invoice.INVOICE);
    }

    /**
     * Create a detached, initialised InvoiceRecord
     */
    public InvoiceRecord(Long id, String name, Short type, Long ownerUid, Integer shouldPay, Timestamp createdAt, Byte status, Timestamp expireAt, Timestamp paidAt, String comment, JSON extraData) {
        super(Invoice.INVOICE);

        setId(id);
        setName(name);
        setType(type);
        setOwnerUid(ownerUid);
        setShouldPay(shouldPay);
        setCreatedAt(createdAt);
        setStatus(status);
        setExpireAt(expireAt);
        setPaidAt(paidAt);
        setComment(comment);
        setExtraData(extraData);
    }
}
