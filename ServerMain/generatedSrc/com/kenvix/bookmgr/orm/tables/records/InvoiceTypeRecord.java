/*
 * This file is generated by jOOQ.
 */
package com.kenvix.bookmgr.orm.tables.records;


import com.kenvix.bookmgr.orm.tables.InvoiceType;
import com.kenvix.bookmgr.orm.tables.interfaces.IInvoiceType;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 订单类型
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InvoiceTypeRecord extends UpdatableRecordImpl<InvoiceTypeRecord> implements Record3<Short, String, String>, IInvoiceType {

    private static final long serialVersionUID = 884595538;

    /**
     * Setter for <code>invoice_type.id</code>.
     */
    @Override
    public InvoiceTypeRecord setId(Short value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>invoice_type.id</code>.
     */
    @Override
    public Short getId() {
        return (Short) get(0);
    }

    /**
     * Setter for <code>invoice_type.description</code>.
     */
    @Override
    public InvoiceTypeRecord setDescription(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>invoice_type.description</code>.
     */
    @Override
    public String getDescription() {
        return (String) get(1);
    }

    /**
     * Setter for <code>invoice_type.driver</code>.
     */
    @Override
    public InvoiceTypeRecord setDriver(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>invoice_type.driver</code>.
     */
    @Override
    public String getDriver() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Short> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Short, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Short, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Short> field1() {
        return InvoiceType.INVOICE_TYPE.ID;
    }

    @Override
    public Field<String> field2() {
        return InvoiceType.INVOICE_TYPE.DESCRIPTION;
    }

    @Override
    public Field<String> field3() {
        return InvoiceType.INVOICE_TYPE.DRIVER;
    }

    @Override
    public Short component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getDescription();
    }

    @Override
    public String component3() {
        return getDriver();
    }

    @Override
    public Short value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getDescription();
    }

    @Override
    public String value3() {
        return getDriver();
    }

    @Override
    public InvoiceTypeRecord value1(Short value) {
        setId(value);
        return this;
    }

    @Override
    public InvoiceTypeRecord value2(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public InvoiceTypeRecord value3(String value) {
        setDriver(value);
        return this;
    }

    @Override
    public InvoiceTypeRecord values(Short value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IInvoiceType from) {
        setId(from.getId());
        setDescription(from.getDescription());
        setDriver(from.getDriver());
    }

    @Override
    public <E extends IInvoiceType> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InvoiceTypeRecord
     */
    public InvoiceTypeRecord() {
        super(InvoiceType.INVOICE_TYPE);
    }

    /**
     * Create a detached, initialised InvoiceTypeRecord
     */
    public InvoiceTypeRecord(Short id, String description, String driver) {
        super(InvoiceType.INVOICE_TYPE);

        set(0, id);
        set(1, description);
        set(2, driver);
    }
}
