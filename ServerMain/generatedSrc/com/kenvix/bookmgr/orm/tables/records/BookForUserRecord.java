/*
 * This file is generated by jOOQ.
 */
package com.kenvix.bookmgr.orm.tables.records;


import com.kenvix.bookmgr.orm.tables.BookForUser;
import com.kenvix.bookmgr.orm.tables.interfaces.IBookForUser;

import java.sql.Timestamp;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record16;
import org.jooq.Row16;
import org.jooq.impl.TableRecordImpl;


/**
 * VIEW
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookForUserRecord extends TableRecordImpl<BookForUserRecord> implements Record16<Long, String, String, Long, Timestamp, Integer, Integer, Byte, String, Long, String, String, String, Long, Integer, String>, IBookForUser {

    private static final long serialVersionUID = -1853418588;

    /**
     * Setter for <code>book_for_user.id</code>. 书本ID
     */
    @Override
    public BookForUserRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>book_for_user.id</code>. 书本ID
     */
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>book_for_user.title</code>. 书籍标题
     */
    @Override
    public BookForUserRecord setTitle(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>book_for_user.title</code>. 书籍标题
     */
    @Override
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>book_for_user.description</code>. 书籍概述
     */
    @Override
    public BookForUserRecord setDescription(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>book_for_user.description</code>. 书籍概述
     */
    @Override
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>book_for_user.publisher_id</code>. 出版社ID
     */
    @Override
    public BookForUserRecord setPublisherId(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>book_for_user.publisher_id</code>. 出版社ID
     */
    @Override
    public Long getPublisherId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>book_for_user.created_at</code>. 条目创建时间
     */
    @Override
    public BookForUserRecord setCreatedAt(Timestamp value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>book_for_user.created_at</code>. 条目创建时间
     */
    @Override
    public Timestamp getCreatedAt() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>book_for_user.num_total</code>. 书籍总数
     */
    @Override
    public BookForUserRecord setNumTotal(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>book_for_user.num_total</code>. 书籍总数
     */
    @Override
    public Integer getNumTotal() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>book_for_user.num_available</code>. 可用书籍数
     */
    @Override
    public BookForUserRecord setNumAvailable(Integer value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>book_for_user.num_available</code>. 可用书籍数
     */
    @Override
    public Integer getNumAvailable() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>book_for_user.status</code>. 书籍状态
     */
    @Override
    public BookForUserRecord setStatus(Byte value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>book_for_user.status</code>. 书籍状态
     */
    @Override
    public Byte getStatus() {
        return (Byte) get(7);
    }

    /**
     * Setter for <code>book_for_user.publisher_name</code>. 出版社名称
     */
    @Override
    public BookForUserRecord setPublisherName(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>book_for_user.publisher_name</code>. 出版社名称
     */
    @Override
    public String getPublisherName() {
        return (String) get(8);
    }

    /**
     * Setter for <code>book_for_user.author_id</code>. 作者ID
     */
    @Override
    public BookForUserRecord setAuthorId(Long value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>book_for_user.author_id</code>. 作者ID
     */
    @Override
    public Long getAuthorId() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>book_for_user.author_name</code>.
     */
    @Override
    public BookForUserRecord setAuthorName(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>book_for_user.author_name</code>.
     */
    @Override
    public String getAuthorName() {
        return (String) get(10);
    }

    /**
     * Setter for <code>book_for_user.author_fullname</code>.
     */
    @Override
    public BookForUserRecord setAuthorFullname(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>book_for_user.author_fullname</code>.
     */
    @Override
    public String getAuthorFullname() {
        return (String) get(11);
    }

    /**
     * Setter for <code>book_for_user.author_country</code>.
     */
    @Override
    public BookForUserRecord setAuthorCountry(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>book_for_user.author_country</code>.
     */
    @Override
    public String getAuthorCountry() {
        return (String) get(12);
    }

    /**
     * Setter for <code>book_for_user.creator_uid</code>. 条目创建者UID
     */
    @Override
    public BookForUserRecord setCreatorUid(Long value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>book_for_user.creator_uid</code>. 条目创建者UID
     */
    @Override
    public Long getCreatorUid() {
        return (Long) get(13);
    }

    /**
     * Setter for <code>book_for_user.type_id</code>. 图书类型ID
     */
    @Override
    public BookForUserRecord setTypeId(Integer value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>book_for_user.type_id</code>. 图书类型ID
     */
    @Override
    public Integer getTypeId() {
        return (Integer) get(14);
    }

    /**
     * Setter for <code>book_for_user.type_name</code>. 类目名称
     */
    @Override
    public BookForUserRecord setTypeName(String value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>book_for_user.type_name</code>. 类目名称
     */
    @Override
    public String getTypeName() {
        return (String) get(15);
    }

    // -------------------------------------------------------------------------
    // Record16 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row16<Long, String, String, Long, Timestamp, Integer, Integer, Byte, String, Long, String, String, String, Long, Integer, String> fieldsRow() {
        return (Row16) super.fieldsRow();
    }

    @Override
    public Row16<Long, String, String, Long, Timestamp, Integer, Integer, Byte, String, Long, String, String, String, Long, Integer, String> valuesRow() {
        return (Row16) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return BookForUser.BOOK_FOR_USER.ID;
    }

    @Override
    public Field<String> field2() {
        return BookForUser.BOOK_FOR_USER.TITLE;
    }

    @Override
    public Field<String> field3() {
        return BookForUser.BOOK_FOR_USER.DESCRIPTION;
    }

    @Override
    public Field<Long> field4() {
        return BookForUser.BOOK_FOR_USER.PUBLISHER_ID;
    }

    @Override
    public Field<Timestamp> field5() {
        return BookForUser.BOOK_FOR_USER.CREATED_AT;
    }

    @Override
    public Field<Integer> field6() {
        return BookForUser.BOOK_FOR_USER.NUM_TOTAL;
    }

    @Override
    public Field<Integer> field7() {
        return BookForUser.BOOK_FOR_USER.NUM_AVAILABLE;
    }

    @Override
    public Field<Byte> field8() {
        return BookForUser.BOOK_FOR_USER.STATUS;
    }

    @Override
    public Field<String> field9() {
        return BookForUser.BOOK_FOR_USER.PUBLISHER_NAME;
    }

    @Override
    public Field<Long> field10() {
        return BookForUser.BOOK_FOR_USER.AUTHOR_ID;
    }

    @Override
    public Field<String> field11() {
        return BookForUser.BOOK_FOR_USER.AUTHOR_NAME;
    }

    @Override
    public Field<String> field12() {
        return BookForUser.BOOK_FOR_USER.AUTHOR_FULLNAME;
    }

    @Override
    public Field<String> field13() {
        return BookForUser.BOOK_FOR_USER.AUTHOR_COUNTRY;
    }

    @Override
    public Field<Long> field14() {
        return BookForUser.BOOK_FOR_USER.CREATOR_UID;
    }

    @Override
    public Field<Integer> field15() {
        return BookForUser.BOOK_FOR_USER.TYPE_ID;
    }

    @Override
    public Field<String> field16() {
        return BookForUser.BOOK_FOR_USER.TYPE_NAME;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getTitle();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public Long component4() {
        return getPublisherId();
    }

    @Override
    public Timestamp component5() {
        return getCreatedAt();
    }

    @Override
    public Integer component6() {
        return getNumTotal();
    }

    @Override
    public Integer component7() {
        return getNumAvailable();
    }

    @Override
    public Byte component8() {
        return getStatus();
    }

    @Override
    public String component9() {
        return getPublisherName();
    }

    @Override
    public Long component10() {
        return getAuthorId();
    }

    @Override
    public String component11() {
        return getAuthorName();
    }

    @Override
    public String component12() {
        return getAuthorFullname();
    }

    @Override
    public String component13() {
        return getAuthorCountry();
    }

    @Override
    public Long component14() {
        return getCreatorUid();
    }

    @Override
    public Integer component15() {
        return getTypeId();
    }

    @Override
    public String component16() {
        return getTypeName();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getTitle();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public Long value4() {
        return getPublisherId();
    }

    @Override
    public Timestamp value5() {
        return getCreatedAt();
    }

    @Override
    public Integer value6() {
        return getNumTotal();
    }

    @Override
    public Integer value7() {
        return getNumAvailable();
    }

    @Override
    public Byte value8() {
        return getStatus();
    }

    @Override
    public String value9() {
        return getPublisherName();
    }

    @Override
    public Long value10() {
        return getAuthorId();
    }

    @Override
    public String value11() {
        return getAuthorName();
    }

    @Override
    public String value12() {
        return getAuthorFullname();
    }

    @Override
    public String value13() {
        return getAuthorCountry();
    }

    @Override
    public Long value14() {
        return getCreatorUid();
    }

    @Override
    public Integer value15() {
        return getTypeId();
    }

    @Override
    public String value16() {
        return getTypeName();
    }

    @Override
    public BookForUserRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public BookForUserRecord value2(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public BookForUserRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public BookForUserRecord value4(Long value) {
        setPublisherId(value);
        return this;
    }

    @Override
    public BookForUserRecord value5(Timestamp value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public BookForUserRecord value6(Integer value) {
        setNumTotal(value);
        return this;
    }

    @Override
    public BookForUserRecord value7(Integer value) {
        setNumAvailable(value);
        return this;
    }

    @Override
    public BookForUserRecord value8(Byte value) {
        setStatus(value);
        return this;
    }

    @Override
    public BookForUserRecord value9(String value) {
        setPublisherName(value);
        return this;
    }

    @Override
    public BookForUserRecord value10(Long value) {
        setAuthorId(value);
        return this;
    }

    @Override
    public BookForUserRecord value11(String value) {
        setAuthorName(value);
        return this;
    }

    @Override
    public BookForUserRecord value12(String value) {
        setAuthorFullname(value);
        return this;
    }

    @Override
    public BookForUserRecord value13(String value) {
        setAuthorCountry(value);
        return this;
    }

    @Override
    public BookForUserRecord value14(Long value) {
        setCreatorUid(value);
        return this;
    }

    @Override
    public BookForUserRecord value15(Integer value) {
        setTypeId(value);
        return this;
    }

    @Override
    public BookForUserRecord value16(String value) {
        setTypeName(value);
        return this;
    }

    @Override
    public BookForUserRecord values(Long value1, String value2, String value3, Long value4, Timestamp value5, Integer value6, Integer value7, Byte value8, String value9, Long value10, String value11, String value12, String value13, Long value14, Integer value15, String value16) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IBookForUser from) {
        setId(from.getId());
        setTitle(from.getTitle());
        setDescription(from.getDescription());
        setPublisherId(from.getPublisherId());
        setCreatedAt(from.getCreatedAt());
        setNumTotal(from.getNumTotal());
        setNumAvailable(from.getNumAvailable());
        setStatus(from.getStatus());
        setPublisherName(from.getPublisherName());
        setAuthorId(from.getAuthorId());
        setAuthorName(from.getAuthorName());
        setAuthorFullname(from.getAuthorFullname());
        setAuthorCountry(from.getAuthorCountry());
        setCreatorUid(from.getCreatorUid());
        setTypeId(from.getTypeId());
        setTypeName(from.getTypeName());
    }

    @Override
    public <E extends IBookForUser> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BookForUserRecord
     */
    public BookForUserRecord() {
        super(BookForUser.BOOK_FOR_USER);
    }

    /**
     * Create a detached, initialised BookForUserRecord
     */
    public BookForUserRecord(Long id, String title, String description, Long publisherId, Timestamp createdAt, Integer numTotal, Integer numAvailable, Byte status, String publisherName, Long authorId, String authorName, String authorFullname, String authorCountry, Long creatorUid, Integer typeId, String typeName) {
        super(BookForUser.BOOK_FOR_USER);

        set(0, id);
        set(1, title);
        set(2, description);
        set(3, publisherId);
        set(4, createdAt);
        set(5, numTotal);
        set(6, numAvailable);
        set(7, status);
        set(8, publisherName);
        set(9, authorId);
        set(10, authorName);
        set(11, authorFullname);
        set(12, authorCountry);
        set(13, creatorUid);
        set(14, typeId);
        set(15, typeName);
    }
}
